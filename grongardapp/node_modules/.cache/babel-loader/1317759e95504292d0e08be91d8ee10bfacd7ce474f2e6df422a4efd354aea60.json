{"ast":null,"code":"\"use client\";\n\n// packages/react/portal/src/Portal.tsx\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  var _globalThis$document;\n  const {\n    container: containerProp,\n    ...portalProps\n  } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && (globalThis === null || globalThis === void 0 || (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body);\n  return container ? ReactDOM.createPortal( /* @__PURE__ */jsx(Primitive.div, {\n    ...portalProps,\n    ref: forwardedRef\n  }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport { Portal, Root };","map":{"version":3,"names":["React","ReactDOM","Primitive","useLayoutEffect","jsx","PORTAL_NAME","Portal","forwardRef","props","forwardedRef","_globalThis$document","container","containerProp","portalProps","mounted","setMounted","useState","globalThis","document","body","createPortal","div","ref","displayName","Root"],"sources":["/Users/nikola/Downloads/grass/grongardapp/node_modules/@radix-ui/react-portal/src/Portal.tsx"],"sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,OAAOC,QAAA,MAAc;AACrB,SAASC,SAAA,QAAiB;AAC1B,SAASC,eAAA,QAAuB;AAuBJ,SAAAC,GAAA;AAjB5B,IAAMC,WAAA,GAAc;AAWpB,IAAMC,MAAA,GAAeN,KAAA,CAAAO,UAAA,CAAuC,CAACC,KAAA,EAAOC,YAAA,KAAiB;EAAA,IAAAC,oBAAA;EACnF,MAAM;IAAEC,SAAA,EAAWC,aAAA;IAAe,GAAGC;EAAY,IAAIL,KAAA;EACrD,MAAM,CAACM,OAAA,EAASC,UAAU,IAAUf,KAAA,CAAAgB,QAAA,CAAS,KAAK;EAClDb,eAAA,CAAgB,MAAMY,UAAA,CAAW,IAAI,GAAG,EAAE;EAC1C,MAAMJ,SAAA,GAAYC,aAAA,IAAkBE,OAAA,KAAWG,UAAA,aAAAA,UAAA,gBAAAP,oBAAA,GAAAO,UAAA,CAAYC,QAAA,cAAAR,oBAAA,uBAAZA,oBAAA,CAAsBS,IAAA;EACrE,OAAOR,SAAA,GACHV,QAAA,CAASmB,YAAA,EAAa,eAAAhB,GAAA,CAACF,SAAA,CAAUmB,GAAA,EAAV;IAAe,GAAGR,WAAA;IAAaS,GAAA,EAAKb;EAAA,CAAc,GAAIE,SAAS,IACtF;AACN,CAAC;AAEDL,MAAA,CAAOiB,WAAA,GAAclB,WAAA;AAIrB,IAAMmB,IAAA,GAAOlB,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}